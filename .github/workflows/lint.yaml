name: Lint

on:
  push:
    branches:
      - main
      - develop
  pull_request:

jobs:
  # SKIP Solidity lint for now
  # solidity:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Check out github repository
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 1

  #     - name: Setup node.js
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: "20.x"

  #     - name: Set yarn cache directory path
  #       id: yarn-cache-dir-path
  #       run: echo "::set-output name=dir::$(yarn cache dir)"

  #     - name: Restore yarn cache
  #       uses: actions/cache@v2
  #       id: yarn-cache
  #       with:
  #         path: |
  #           ${{ steps.yarn-cache-dir-path.outputs.dir }}
  #         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #           ${{ runner.os }}-yarn-

  #     - name: Install node.js dependencies
  #       run: yarn --frozen-lockfile

  #     - name: Run linter on *.sol and *.json
  #       run: yarn lint:check

  commits:
    runs-on: ubuntu-latest

    steps:
      - name: Check out github repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Run commitlint
        uses: wagoid/commitlint-github-action@v2

  ruff:
    runs-on: ubuntu-latest

    steps:
      - name: Check out github repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Install dependencies
        run: uv sync --group dev

      - name: Run Ruff formatter check
        run: uv run ruff format --check .

      - name: Run Ruff linter
        run: uv run ruff check .